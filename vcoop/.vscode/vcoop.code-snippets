{
	// Place your vcoop workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Proof": {
		"scope": "haskell",
		"prefix": "setproof",
		"body": [
		"\t(s0 \\/ s1) /\\ s0         ? unionIntersect s0 s1 s0",
		"=== (s0 /\\ s0) \\/ (s1 /\\ s0) ? intersectSelf s0",
		"=== s0 \\/ (s1 /\\ s0)         ? intersectComm s1 s0",
		"=== s0 \\/ (s0 /\\ s1)         ? disjoint s0 s1",
		"=== s0 \\/ emptySet           ? unionEmpty s0",
		"=== s0                       *** QED"
		],
		"description": "Annotate as rewrite rule"
	},
	"Rewrite": {
		"scope": "haskell",
		"prefix": "rw",
		"body": [
			"{-@ rewrite ${1:lemmaName} @-}"
		],
		"description": "Annotate as rewrite rule"
	}
}